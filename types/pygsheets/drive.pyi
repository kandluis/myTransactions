from _typeshed import Incomplete
from pygsheets.custom_types import ExportType as ExportType
from pygsheets.exceptions import (
    CannotRemoveOwnerError as CannotRemoveOwnerError,
    FolderNotFound as FolderNotFound,
    InvalidArgumentValue as InvalidArgumentValue,
)
from pygsheets.spreadsheet import Spreadsheet as Spreadsheet
from pygsheets.worksheet import Worksheet as Worksheet

PERMISSION_ROLES: Incomplete
PERMISSION_TYPES: Incomplete
FIELDS_TO_INCLUDE: str
DISCOVERY_SERVICE_URL: str

class DriveAPIWrapper:
    service: Incomplete
    team_drive_id: Incomplete
    include_team_drive_items: bool
    include_items_from_all_drive: bool
    logger: Incomplete
    retries: Incomplete
    def __init__(self, http, data_path, retries: int = 3, logger=...) -> None: ...
    def enable_team_drive(self, team_drive_id) -> None: ...
    def disable_team_drive(self) -> None: ...
    def is_team_drive(self): ...
    def get_update_time(self, file_id): ...
    def list(self, **kwargs): ...
    def create_folder(self, name, folder: Incomplete | None = None, **kwargs): ...
    def get_folder_id(self, name): ...
    def folder_metadata(self, query: str = "", only_team_drive: bool = False): ...
    def spreadsheet_metadata(
        self,
        query: str = "",
        only_team_drive: bool = False,
        fid: Incomplete | None = None,
    ): ...
    def delete(self, file_id, **kwargs) -> None: ...
    def move_file(
        self, file_id, old_folder, new_folder, body: Incomplete | None = None, **kwargs
    ): ...
    def copy_file(
        self, file_id, title, folder, body: Incomplete | None = None, **kwargs
    ): ...
    def update_file(self, file_id, body: Incomplete | None = None, **kwargs): ...
    def export(
        self, sheet, file_format, path: str = "", filename: str = ""
    ) -> None: ...
    def create_permission(self, file_id, role, type, **kwargs): ...
    def list_permissions(self, file_id, **kwargs): ...
    def delete_permission(self, file_id, permission_id, **kwargs) -> None: ...
